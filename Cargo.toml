[package]
name = "lnpbp"
version = "0.4.0-beta"
license = "MIT"
authors = ["Dr. Maxim Orlovsky <orlovsky@pandoracore.com>"]
description = "LNP/BP Core Library implementing LNPBP specifications & standards"
repository = "https://github.com/LNP-BP/rust-lnpbp"
homepage = "https://github.com/LNP-BP"
keywords = ["bitcoin", "lightning", "lnp-bp", "layer-3", "cryptography"]
categories = ["cryptography::cryptocurrencies"]
readme = "README.md"
edition = "2018"
exclude = [".github", "contrib", "client_side_validation", "strict_encoding", "invoice"]

[lib]
name = "lnpbp"
path = "src/lib.rs"
crate-type = ["rlib", "staticlib"]

# Dependencies
# ============
#
# Version policy
# --------------
# The policy in specifying dependencies versions are to use tilde requirements
# according to
# <https://doc.rust-lang.org/nightly/cargo/reference/specifying-dependencies.html?highlight=feature#tilde-requirements>
# with full semver version specification (major, minor and patch components)
# which means that we may upgrade for patches/bugfixes, but must not change
# even the minor version of the package.
# Once the library is stable consider upgrading tilde requirements to strict
# equivalence requirements (with '=' sign) since even dependencies patching will
# not introduce risk of breaking the consensus and even security updates must
# be done manually after through testing
[dependencies]
# Dependencies on other LNP/BP repositories
# -----------------------------------------
amplify = { version = "3", features = ["stringly_conversions", "std"] }
amplify_derive = "2.4.3"
strict_encoding = { version = "1", features = ["miniscript"] }
strict_encoding_derive = { version = "1" }
lightning_encoding = { git = "https://github.com/claudiosdc/lnp-core.git", branch = "cl_sd_val_improv" }
client_side_validation = { path = "./client_side_validation" }
descriptor-wallet = { git = "https://github.com/LNP-BP/descriptor-wallet" }
# Dependencies on core rust-bitcoin ecosystem projects
# ----------------------------------------------------
bitcoin = { version = "~0.26.0", features = ["rand"] }
bitcoin_hashes = "~0.9.4" # we need macro from here
bech32 = "~0.7.2"
# <https://github.com/LNP-BP/LNPBPs/blob/master/lnpbp-0002.md#deterministic-public-key-extraction-from-bitcoin-script>
# We have to fix version of miniscript as required by LNPBP-2 specification
miniscript = { version = "5", features = ["compiler"] }
# Serialization
# -------------
# This strange naming is a workaround for cargo inability to define required
# features for a dependency. See
# <https://github.com/rust-lang/api-guidelines/issues/180> for the explanation
# and references.
serde_crate = { package = "serde", version = "~1.0.0", features = ["derive"], optional = true }
serde_with = { version = "~1.5.0", features = ["hex"], optional = true }
serde_with_macros = { version = "~1.2.0", optional = true } # Fix for the problem in 1.3.0
# Core rust projects
# ------------------
lazy_static = "~1.4.0"
deflate = { version = "~0.8.6", optional = true }
inflate = { version = "~0.4.5", optional = true }

# Features
# ========
[features]
default = ["zip"]
all = ["serde", "elgamal", "bulletproofs", "zip"]
serde = ["serde_crate", "serde_with", "serde_with_macros", "amplify/serde",
         "bitcoin/use-serde", "bitcoin_hashes/serde", "miniscript/serde",
         "descriptor-wallet/serde"]
elgamal = [] # Provides ElGamal encryption module from this library
bulletproofs = ["client_side_validation/bulletproofs"]
zip = ["inflate", "deflate"]

[workspace]
members = [".", "strict_encoding", "strict_encoding/derive", "client_side_validation", "invoice"]
default-members = [".", "strict_encoding", "strict_encoding/derive", "client_side_validation", "invoice"]
exclude = ["dep_test"]
